@page "/registros"
@page "/registros/{RegistroId:int}"

@inject RegistrosBLL registrosBLL
@inject NotificationService notificationService

<EditForm Model="registros" OnValidSubmit="Guardar">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header text-center">
            <h3>Registros</h3>
        </div>
        <div class="card-body">

            @*RegistrosId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="mb-3">
                        <label>RegistrosId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="registros.RegistroId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="bi bi-search btn btn-primary input-group-text" @onclick="Buscar"> Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
         </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="submit" class="bi bi-file-earmark-fill btn btn-lg btn-primary"> Nuevo</button>
                <button type="submit" class="bi bi-file-earmark-text-fill btn btn-lg btn-success"> Guardar</button>
                <button type="submit" class="bi bi-pencil-square btn btn-lg btn-success"> Editar</button>
                <button type="submit" class="bi bi-trash btn btn-lg btn-danger"> Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int RegistroId { get; set; }
    public Registros registros { get; set; } = new Registros();
    public String mensaje { get; set; } = "";

    protected override void OnInitialized()
    {
        if (RegistroId > 0)
        {
            this.registros.RegistroId = RegistroId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        registros = new Registros();
    }
    
    public void Guardar()
    {

        bool guardo = registrosBLL.Guardar(registros);

        if(guardo)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
        }
    }
    private void Buscar()
    {
        if (registros.RegistroId > 0)
        {
            var encontrado = registrosBLL.Buscar(registros.RegistroId);
            if (encontrado != null)
                this.registros = encontrado;

                ShowNotification(
                new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Se encontraron los datos correctamente"
                });
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}